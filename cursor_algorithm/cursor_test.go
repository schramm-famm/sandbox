package cursor

import (
	"fmt"
	"testing"
)

func TestPostConversationsHandler(t *testing.T) {
	tests := []struct {
		Name string
		Data Update

		SenderStart int
		SenderEnd   int

		ReceiverStart            int
		ReceiverEnd              int
		ExpectedReceiverNewStart int
		ExpectedReceiverNewEnd   int
	}{
		// ADD TESTS
		{
			Name: "Add::Single::Receiver Cursor::Sender After Receiver",
			Data: Update{
				CursorStartDelta: 1,
				CursorEndDelta:   1,
				DocDelta:         1,
			},
			SenderStart:              1,
			SenderEnd:                1,
			ReceiverStart:            0,
			ReceiverEnd:              0,
			ExpectedReceiverNewStart: 0,
			ExpectedReceiverNewEnd:   0,
		},
		{
			Name: "Add::Single::Receiver Cursor::Sender Before Receiver",
			Data: Update{
				CursorStartDelta: 1,
				CursorEndDelta:   1,
				DocDelta:         1,
			},
			SenderStart:              0,
			SenderEnd:                0,
			ReceiverStart:            1,
			ReceiverEnd:              1,
			ExpectedReceiverNewStart: 2,
			ExpectedReceiverNewEnd:   2,
		},
		{
			Name: "Add::Single::Receiver Cursor::Same Position",
			Data: Update{
				CursorStartDelta: 1,
				CursorEndDelta:   1,
				DocDelta:         1,
			},
			SenderStart:              0,
			SenderEnd:                0,
			ReceiverStart:            0,
			ReceiverEnd:              0,
			ExpectedReceiverNewStart: 0,
			ExpectedReceiverNewEnd:   0,
		},
		{
			Name: "Add::Multiple::Receiver Cursor::Sender After Receiver",
			Data: Update{
				CursorStartDelta: 2,
				CursorEndDelta:   2,
				DocDelta:         2,
			},
			SenderStart:              1,
			SenderEnd:                1,
			ReceiverStart:            0,
			ReceiverEnd:              0,
			ExpectedReceiverNewStart: 0,
			ExpectedReceiverNewEnd:   0,
		},
		{
			Name: "Add::Multiple::Receiver Cursor::Sender Before Receiver",
			Data: Update{
				CursorStartDelta: 2,
				CursorEndDelta:   2,
				DocDelta:         2,
			},
			SenderStart:              0,
			SenderEnd:                0,
			ReceiverStart:            1,
			ReceiverEnd:              1,
			ExpectedReceiverNewStart: 3,
			ExpectedReceiverNewEnd:   3,
		},
		{
			Name: "Add::Multiple::Receiver Cursor::Same Position",
			Data: Update{
				CursorStartDelta: 2,
				CursorEndDelta:   2,
				DocDelta:         2,
			},
			SenderStart:              0,
			SenderEnd:                0,
			ReceiverStart:            0,
			ReceiverEnd:              0,
			ExpectedReceiverNewStart: 0,
			ExpectedReceiverNewEnd:   0,
		},
		{
			Name: "Add::Single::Receiver Range::Sender After Receiver",
			Data: Update{
				CursorStartDelta: 1,
				CursorEndDelta:   1,
				DocDelta:         1,
			},
			SenderStart:              3,
			SenderEnd:                3,
			ReceiverStart:            0,
			ReceiverEnd:              2,
			ExpectedReceiverNewStart: 0,
			ExpectedReceiverNewEnd:   2,
		},
		{
			Name: "Add::Single::Receiver Range::Sender Before Receiver",
			Data: Update{
				CursorStartDelta: 1,
				CursorEndDelta:   1,
				DocDelta:         1,
			},
			SenderStart:              0,
			SenderEnd:                0,
			ReceiverStart:            1,
			ReceiverEnd:              3,
			ExpectedReceiverNewStart: 2,
			ExpectedReceiverNewEnd:   4,
		},
		{
			Name: "Add::Single::Receiver Range::Sender Same as Receiver Start",
			Data: Update{
				CursorStartDelta: 1,
				CursorEndDelta:   1,
				DocDelta:         1,
			},
			SenderStart:              0,
			SenderEnd:                0,
			ReceiverStart:            0,
			ReceiverEnd:              2,
			ExpectedReceiverNewStart: 1,
			ExpectedReceiverNewEnd:   3,
		},
		{
			Name: "Add::Single::Receiver Range::Sender Same as Receiver End",
			Data: Update{
				CursorStartDelta: 1,
				CursorEndDelta:   1,
				DocDelta:         1,
			},
			SenderStart:              2,
			SenderEnd:                2,
			ReceiverStart:            0,
			ReceiverEnd:              2,
			ExpectedReceiverNewStart: 0,
			ExpectedReceiverNewEnd:   2,
		},
		{
			Name: "Add::Single::Receiver Range::Sender After Receiver Start & Before Receiver End",
			Data: Update{
				CursorStartDelta: 1,
				CursorEndDelta:   1,
				DocDelta:         1,
			},
			SenderStart:              1,
			SenderEnd:                1,
			ReceiverStart:            0,
			ReceiverEnd:              2,
			ExpectedReceiverNewStart: 0,
			ExpectedReceiverNewEnd:   3,
		},

		// DELETE
		{
			Name: "Delete::Sender Cursor::Backward::Single::Receiver Cursor::Sender After Receiver",
			Data: Update{
				CursorStartDelta: -1,
				CursorEndDelta:   -1,
				DocDelta:         -1,
			},
			SenderStart:              1,
			SenderEnd:                1,
			ReceiverStart:            0,
			ReceiverEnd:              0,
			ExpectedReceiverNewStart: 0,
			ExpectedReceiverNewEnd:   0,
		},
		{
			Name: "Delete::Sender Cursor:Backward::Single::Receiver Cursor::Sender Before Receiver",
			Data: Update{
				CursorStartDelta: -1,
				CursorEndDelta:   -1,
				DocDelta:         -1,
			},
			SenderStart:              1,
			SenderEnd:                1,
			ReceiverStart:            2,
			ReceiverEnd:              2,
			ExpectedReceiverNewStart: 1,
			ExpectedReceiverNewEnd:   1,
		},
		{
			Name: "Delete::Sender Cursor::Backward::Single::Receiver Cursor::Same Position",
			Data: Update{
				CursorStartDelta: -1,
				CursorEndDelta:   -1,
				DocDelta:         -1,
			},
			SenderStart:              1,
			SenderEnd:                1,
			ReceiverStart:            1,
			ReceiverEnd:              1,
			ExpectedReceiverNewStart: 0,
			ExpectedReceiverNewEnd:   0,
		},
		{
			Name: "Delete::Sender Cursor::Backward::Multiple::Receiver Cursor::Deleted Content After Receiver",
			Data: Update{
				CursorStartDelta: -2,
				CursorEndDelta:   -2,
				DocDelta:         -2,
			},
			SenderStart:              4,
			SenderEnd:                4,
			ReceiverStart:            2,
			ReceiverEnd:              2,
			ExpectedReceiverNewStart: 2,
			ExpectedReceiverNewEnd:   2,
		},
		{
			Name: "Delete::Sender Cursor:Backward::Multiple::Receiver Cursor::Deleted Content Before Receiver",
			Data: Update{
				CursorStartDelta: -2,
				CursorEndDelta:   -2,
				DocDelta:         -2,
			},
			SenderStart:              3,
			SenderEnd:                3,
			ReceiverStart:            3,
			ReceiverEnd:              3,
			ExpectedReceiverNewStart: 1,
			ExpectedReceiverNewEnd:   1,
		},
		{
			Name: "Delete::Sender Cursor::Backward::Multiple::Receiver Cursor::Deleted Content Overlaps",
			Data: Update{
				CursorStartDelta: -3,
				CursorEndDelta:   -3,
				DocDelta:         -3,
			},
			SenderStart:              3,
			SenderEnd:                3,
			ReceiverStart:            1,
			ReceiverEnd:              1,
			ExpectedReceiverNewStart: 0,
			ExpectedReceiverNewEnd:   0,
		},
		{
			Name: "Delete::Sender Cursor::Backward::Multiple::Receiver Range::Deleted Content After Receiver",
			Data: Update{
				CursorStartDelta: -2,
				CursorEndDelta:   -2,
				DocDelta:         -2,
			},
			SenderStart:              5,
			SenderEnd:                5,
			ReceiverStart:            1,
			ReceiverEnd:              3,
			ExpectedReceiverNewStart: 1,
			ExpectedReceiverNewEnd:   3,
		},
		{
			Name: "Delete::Sender Cursor::Backward::Multiple::Receiver Range::Deleted Content Before Receiver",
			Data: Update{
				CursorStartDelta: -2,
				CursorEndDelta:   -2,
				DocDelta:         -2,
			},
			SenderStart:              3,
			SenderEnd:                3,
			ReceiverStart:            3,
			ReceiverEnd:              5,
			ExpectedReceiverNewStart: 1,
			ExpectedReceiverNewEnd:   3,
		},
		{
			Name: "Delete::Sender Cursor::Backward::Multiple::Receiver Range::Deleted Content Overlaps Receiver End",
			Data: Update{
				CursorStartDelta: -2,
				CursorEndDelta:   -2,
				DocDelta:         -2,
			},
			SenderStart:              4,
			SenderEnd:                4,
			ReceiverStart:            1,
			ReceiverEnd:              3,
			ExpectedReceiverNewStart: 1,
			ExpectedReceiverNewEnd:   2,
		},
		{
			Name: "Delete::Sender Cursor::Backward::Multiple::Receiver Range::Deleted Content Overlaps Receiver Start",
			Data: Update{
				CursorStartDelta: -2,
				CursorEndDelta:   -2,
				DocDelta:         -2,
			},
			SenderStart:              2,
			SenderEnd:                2,
			ReceiverStart:            1,
			ReceiverEnd:              3,
			ExpectedReceiverNewStart: 0,
			ExpectedReceiverNewEnd:   1,
		},
		{
			Name: "Delete::Sender Cursor::Backward::Multiple::Receiver Range::Deleted Content Overlaps Start & End",
			Data: Update{
				CursorStartDelta: -4,
				CursorEndDelta:   -4,
				DocDelta:         -4,
			},
			SenderStart:              4,
			SenderEnd:                4,
			ReceiverStart:            1,
			ReceiverEnd:              3,
			ExpectedReceiverNewStart: 0,
			ExpectedReceiverNewEnd:   0,
		},
		{
			Name: "Delete::Sender Cursor::Backward::Multiple::Receiver Range::Deleted Content Same as Start & End",
			Data: Update{
				CursorStartDelta: -2,
				CursorEndDelta:   -2,
				DocDelta:         -2,
			},
			SenderStart:              3,
			SenderEnd:                3,
			ReceiverStart:            1,
			ReceiverEnd:              3,
			ExpectedReceiverNewStart: 1,
			ExpectedReceiverNewEnd:   1,
		},
		{
			Name: "Delete::Sender Cursor::Backward::Multiple::Receiver Range::Deleted Content Surrounded by Receiver",
			Data: Update{
				CursorStartDelta: -2,
				CursorEndDelta:   -2,
				DocDelta:         -2,
			},
			SenderStart:              3,
			SenderEnd:                3,
			ReceiverStart:            0,
			ReceiverEnd:              4,
			ExpectedReceiverNewStart: 0,
			ExpectedReceiverNewEnd:   2,
		},
		{
			Name: "Delete::Sender Range::Backward::Multiple::Receiver Range::Deleted Content After Receiver",
			Data: Update{
				CursorStartDelta: 0,
				CursorEndDelta:   -2,
				DocDelta:         -2,
			},
			SenderStart:              2,
			SenderEnd:                4,
			ReceiverStart:            0,
			ReceiverEnd:              2,
			ExpectedReceiverNewStart: 0,
			ExpectedReceiverNewEnd:   2,
		},
		{
			Name: "Delete::Sender Range::Backward::Multiple::Receiver Range::Deleted Content Before Receiver",
			Data: Update{
				CursorStartDelta: 0,
				CursorEndDelta:   -2,
				DocDelta:         -2,
			},
			SenderStart:              0,
			SenderEnd:                2,
			ReceiverStart:            2,
			ReceiverEnd:              4,
			ExpectedReceiverNewStart: 0,
			ExpectedReceiverNewEnd:   2,
		},
		{
			Name: "Delete::Sender Range::Backward::Multiple::Receiver Range::Deleted Content Overlaps Receiver End",
			Data: Update{
				CursorStartDelta: 0,
				CursorEndDelta:   -2,
				DocDelta:         -2,
			},
			SenderStart:              1,
			SenderEnd:                3,
			ReceiverStart:            0,
			ReceiverEnd:              2,
			ExpectedReceiverNewStart: 0,
			ExpectedReceiverNewEnd:   1,
		},
		{
			Name: "Delete::Sender Range::Backward::Multiple::Receiver Range::Deleted Content Overlaps Receiver Start",
			Data: Update{
				CursorStartDelta: 0,
				CursorEndDelta:   -2,
				DocDelta:         -2,
			},
			SenderStart:              0,
			SenderEnd:                2,
			ReceiverStart:            1,
			ReceiverEnd:              3,
			ExpectedReceiverNewStart: 0,
			ExpectedReceiverNewEnd:   1,
		},
		{
			Name: "Delete::Sender Cursor::Forward::Single::Receiver Cursor::Sender After Receiver",
			Data: Update{
				CursorStartDelta: 0,
				CursorEndDelta:   0,
				DocDelta:         -1,
			},
			SenderStart:              1,
			SenderEnd:                1,
			ReceiverStart:            0,
			ReceiverEnd:              0,
			ExpectedReceiverNewStart: 0,
			ExpectedReceiverNewEnd:   0,
		},
		{
			Name: "Delete::Sender Cursor::Forward::Single::Receiver Cursor::Sender Before Receiver",
			Data: Update{
				CursorStartDelta: 0,
				CursorEndDelta:   0,
				DocDelta:         -1,
			},
			SenderStart:              0,
			SenderEnd:                0,
			ReceiverStart:            1,
			ReceiverEnd:              1,
			ExpectedReceiverNewStart: 0,
			ExpectedReceiverNewEnd:   0,
		},
		{
			Name: "Delete::Sender Cursor::Forward::Single::Receiver Cursor::Same Position",
			Data: Update{
				CursorStartDelta: 0,
				CursorEndDelta:   0,
				DocDelta:         -1,
			},
			SenderStart:              1,
			SenderEnd:                1,
			ReceiverStart:            1,
			ReceiverEnd:              1,
			ExpectedReceiverNewStart: 1,
			ExpectedReceiverNewEnd:   1,
		},
		{
			Name: "Delete::Sender Cursor::Forward::Multiple::Receiver Cursor::Same Position",
			Data: Update{
				CursorStartDelta: 0,
				CursorEndDelta:   0,
				DocDelta:         -2,
			},
			SenderStart:              1,
			SenderEnd:                1,
			ReceiverStart:            1,
			ReceiverEnd:              1,
			ExpectedReceiverNewStart: 1,
			ExpectedReceiverNewEnd:   1,
		},
		{
			Name: "Delete::Sender Cursor::Forward::Multiple::Receiver Cursor::Sender Before Receiver",
			Data: Update{
				CursorStartDelta: 0,
				CursorEndDelta:   0,
				DocDelta:         -2,
			},
			SenderStart:              1,
			SenderEnd:                1,
			ReceiverStart:            3,
			ReceiverEnd:              3,
			ExpectedReceiverNewStart: 1,
			ExpectedReceiverNewEnd:   1,
		},
		{
			Name: "Delete::Sender Cursor::Forward::Multiple::Receiver Cursor::Deleted Content Overlaps",
			Data: Update{
				CursorStartDelta: 0,
				CursorEndDelta:   0,
				DocDelta:         -2,
			},
			SenderStart:              1,
			SenderEnd:                1,
			ReceiverStart:            2,
			ReceiverEnd:              2,
			ExpectedReceiverNewStart: 1,
			ExpectedReceiverNewEnd:   1,
		},
		{
			Name: "Delete::Sender Cursor::Forward::Multiple::Receiver Range::Deleted Content After Receiver",
			Data: Update{
				CursorStartDelta: 0,
				CursorEndDelta:   0,
				DocDelta:         -2,
			},
			SenderStart:              2,
			SenderEnd:                2,
			ReceiverStart:            0,
			ReceiverEnd:              2,
			ExpectedReceiverNewStart: 0,
			ExpectedReceiverNewEnd:   2,
		},
		{
			Name: "Delete::Sender Cursor::Forward::Multiple::Receiver Range::Deleted Content Before Receiver",
			Data: Update{
				CursorStartDelta: 0,
				CursorEndDelta:   0,
				DocDelta:         -2,
			},
			SenderStart:              0,
			SenderEnd:                0,
			ReceiverStart:            2,
			ReceiverEnd:              4,
			ExpectedReceiverNewStart: 0,
			ExpectedReceiverNewEnd:   2,
		},
		{
			Name: "Delete::Sender Cursor::Forward::Multiple::Receiver Range::Deleted Content Overlaps Receiver End",
			Data: Update{
				CursorStartDelta: 0,
				CursorEndDelta:   0,
				DocDelta:         -2,
			},
			SenderStart:              2,
			SenderEnd:                2,
			ReceiverStart:            1,
			ReceiverEnd:              3,
			ExpectedReceiverNewStart: 1,
			ExpectedReceiverNewEnd:   2,
		},
		{
			Name: "Delete::Sender Cursor::Forward::Multiple::Receiver Range::Deleted Content Overlaps Receiver Start",
			Data: Update{
				CursorStartDelta: 0,
				CursorEndDelta:   0,
				DocDelta:         -2,
			},
			SenderStart:              0,
			SenderEnd:                0,
			ReceiverStart:            1,
			ReceiverEnd:              3,
			ExpectedReceiverNewStart: 0,
			ExpectedReceiverNewEnd:   1,
		},
		{
			Name: "Delete::Sender Cursor::Forward::Multiple::Receiver Range::Deleted Content Overlaps Start & End",
			Data: Update{
				CursorStartDelta: 0,
				CursorEndDelta:   0,
				DocDelta:         -4,
			},
			SenderStart:              0,
			SenderEnd:                0,
			ReceiverStart:            1,
			ReceiverEnd:              3,
			ExpectedReceiverNewStart: 0,
			ExpectedReceiverNewEnd:   0,
		},
		{
			Name: "Delete::Sender Cursor::Forward::Multiple::Receiver Range::Deleted Content Same as Start & End",
			Data: Update{
				CursorStartDelta: 0,
				CursorEndDelta:   0,
				DocDelta:         -3,
			},
			SenderStart:              1,
			SenderEnd:                1,
			ReceiverStart:            1,
			ReceiverEnd:              3,
			ExpectedReceiverNewStart: 1,
			ExpectedReceiverNewEnd:   1,
		},
		{
			Name: "Delete::Sender Cursor::Forward::Multiple::Receiver Range::Deleted Content Surrounded by Receiver",
			Data: Update{
				CursorStartDelta: 0,
				CursorEndDelta:   0,
				DocDelta:         -2,
			},
			SenderStart:              1,
			SenderEnd:                1,
			ReceiverStart:            0,
			ReceiverEnd:              4,
			ExpectedReceiverNewStart: 0,
			ExpectedReceiverNewEnd:   2,
		},

		// REPLACE
		{
			Name: "Replace::Receiver Cursor::Smaller::Sender After Receiver",
			Data: Update{
				CursorStartDelta: 1,
				CursorEndDelta:   -1,
				DocDelta:         -1,
			},
			SenderStart:              2,
			SenderEnd:                4,
			ReceiverStart:            0,
			ReceiverEnd:              0,
			ExpectedReceiverNewStart: 0,
			ExpectedReceiverNewEnd:   0,
		},
		{
			Name: "Replace::Receiver Cursor::Smaller::Sender Before Receiver",
			Data: Update{
				CursorStartDelta: 1,
				CursorEndDelta:   -1,
				DocDelta:         -1,
			},
			SenderStart:              0,
			SenderEnd:                2,
			ReceiverStart:            2,
			ReceiverEnd:              2,
			ExpectedReceiverNewStart: 0,
			ExpectedReceiverNewEnd:   0,
		},
		{
			Name: "Replace::Receiver Cursor::Smaller::Deleted Content Overlaps Receiver",
			Data: Update{
				CursorStartDelta: 1,
				CursorEndDelta:   -1,
				DocDelta:         -1,
			},
			SenderStart:              0,
			SenderEnd:                2,
			ReceiverStart:            1,
			ReceiverEnd:              1,
			ExpectedReceiverNewStart: 0,
			ExpectedReceiverNewEnd:   0,
		},
		{
			Name: "Replace::Receiver Range::Smaller::Sender After Receiver",
			Data: Update{
				CursorStartDelta: 1,
				CursorEndDelta:   -1,
				DocDelta:         -1,
			},
			SenderStart:              2,
			SenderEnd:                4,
			ReceiverStart:            0,
			ReceiverEnd:              2,
			ExpectedReceiverNewStart: 0,
			ExpectedReceiverNewEnd:   2,
		},
		{
			Name: "Replace::Receiver Range::Smaller::Sender Before Receiver",
			Data: Update{
				CursorStartDelta: 1,
				CursorEndDelta:   -1,
				DocDelta:         -1,
			},
			SenderStart:              0,
			SenderEnd:                2,
			ReceiverStart:            2,
			ReceiverEnd:              4,
			ExpectedReceiverNewStart: 1,
			ExpectedReceiverNewEnd:   3,
		},
		{
			Name: "Replace::Receiver Range::Smaller::Replaced Content Overlaps Receiver End",
			Data: Update{
				CursorStartDelta: 1,
				CursorEndDelta:   -1,
				DocDelta:         -1,
			},
			SenderStart:              1,
			SenderEnd:                3,
			ReceiverStart:            0,
			ReceiverEnd:              2,
			ExpectedReceiverNewStart: 0,
			ExpectedReceiverNewEnd:   1, // FUDGE
		},
		{
			Name: "Replace::Receiver Range::Smaller::Replaced Content Overlaps Receiver Start",
			Data: Update{
				CursorStartDelta: 1,
				CursorEndDelta:   -1,
				DocDelta:         -1,
			},
			SenderStart:              0,
			SenderEnd:                2,
			ReceiverStart:            1,
			ReceiverEnd:              3,
			ExpectedReceiverNewStart: 1,
			ExpectedReceiverNewEnd:   2,
		},
		{
			Name: "Replace::Receiver Range::Smaller::Replaced Content Overlaps Receiver Start & End",
			Data: Update{
				CursorStartDelta: 1,
				CursorEndDelta:   -3,
				DocDelta:         -3,
			},
			SenderStart:              0,
			SenderEnd:                4,
			ReceiverStart:            1,
			ReceiverEnd:              3,
			ExpectedReceiverNewStart: 0,
			ExpectedReceiverNewEnd:   0,
		},
		{
			Name: "Replace::Receiver Range::Smaller::Replaced Content Same as Receiver Start & End",
			Data: Update{
				CursorStartDelta: 1,
				CursorEndDelta:   -1,
				DocDelta:         -1,
			},
			SenderStart:              0,
			SenderEnd:                2,
			ReceiverStart:            0,
			ReceiverEnd:              2,
			ExpectedReceiverNewStart: 0,
			ExpectedReceiverNewEnd:   0,
		},
		{
			Name: "Replace::Receiver Range::Smaller::Replaced Content Surrouned by Receiver",
			Data: Update{
				CursorStartDelta: 1,
				CursorEndDelta:   -1,
				DocDelta:         -1,
			},
			SenderStart:              1,
			SenderEnd:                3,
			ReceiverStart:            0,
			ReceiverEnd:              4,
			ExpectedReceiverNewStart: 0,
			ExpectedReceiverNewEnd:   3,
		},
		{
			Name: "Replace::Receiver Range::Same Size::Replaced Content Surrouned by Receiver",
			Data: Update{
				CursorStartDelta: 2,
				CursorEndDelta:   0,
				DocDelta:         0,
			},
			SenderStart:              1,
			SenderEnd:                3,
			ReceiverStart:            0,
			ReceiverEnd:              4,
			ExpectedReceiverNewStart: 0,
			ExpectedReceiverNewEnd:   4,
		},
		{
			Name: "Replace::Receiver Range::Bigger::Replaced Content Surrouned by Receiver",
			Data: Update{
				CursorStartDelta: 3,
				CursorEndDelta:   1,
				DocDelta:         1,
			},
			SenderStart:              1,
			SenderEnd:                3,
			ReceiverStart:            0,
			ReceiverEnd:              4,
			ExpectedReceiverNewStart: 0,
			ExpectedReceiverNewEnd:   5,
		},
	}

	for _, test := range tests {
		t.Run(test.Name, func(t *testing.T) {
			fmt.Println(test.Name)

			newStart, newEnd := processUpdate(
				test.ReceiverStart,
				test.ReceiverEnd,
				test.SenderStart,
				test.SenderEnd,
				test.Data,
			)

			if test.ExpectedReceiverNewStart != newStart {
				t.Errorf(
					"Updated cursor start is wrong. Expected: %d. Actual: %d.",
					test.ExpectedReceiverNewStart,
					newStart,
				)
			}
			if test.ExpectedReceiverNewEnd != newEnd {
				t.Errorf(
					"Updated cursor end is wrong. Expected: %d. Actual: %d.",
					test.ExpectedReceiverNewEnd,
					newEnd,
				)
			}
		})
	}
}
